#@ load("@ytt:assert", "assert")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:data", "data")
#@ load("@ytt:library", "library")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:template", "template")

#@ def add_cf_db_namespace():
#@overlay/match by=overlay.all, expects="1+"
---
metadata:
  #@overlay/match missing_ok=True
  namespace: cf-db
#@ end

---
apiVersion: v1
kind: Namespace
metadata:
  name: cf-db

---
apiVersion: v1
kind: Secret
metadata:
  name: cf-db-admin-secret
  namespace: cf-db
data:
  #@ if len(data.values.cf_db.admin_password) == 0:
  #@  assert.fail("cf_db.admin_password cannot be empty")
  #@ end
  postgresql-password: #@ base64.encode(data.values.cf_db.admin_password)

---
apiVersion: secretgen.k14s.io/v1alpha1
kind: SecretRequest
metadata:
  name: cf-uaa-db-password
  namespace: cf-db
spec:
  fromNamespace: cf-system

---
apiVersion: v1
kind: Secret
metadata:
  name: cf-db-credentials
  namespace: cf-db
data:
  #@ if len(data.values.capi.database.user) == 0:
  #@  assert.fail("capi.database.user cannot be empty")
  #@ end
  ccdb-username: #@ base64.encode(data.values.capi.database.user)
  #@ if len(data.values.capi.database.password) == 0:
  #@  assert.fail("capi.database.password cannot be empty")
  #@ end
  ccdb-password: #@ base64.encode(data.values.capi.database.password)

#@overlay/match by=overlay.subset({"kind": "ConfigMap", "metadata":{"name":"cf-db-postgresql-init-scripts"}})
---
#@ ccdb = data.values.capi.database
#@ uaadb = data.values.uaa.database
#@yaml/text-templated-strings
data:
  #@overlay/match missing_ok=True
  init.sh: |
    #!/bin/bash
    CCDB_USERNAME=$(cat /docker-entrypoint-initdb.d/secret/ccdb-username)
    CCDB_PASSWORD=$(cat /docker-entrypoint-initdb.d/secret/ccdb-password)
    UAADB_USERNAME=uaa
    cat > /tmp/setup_db.sql <<EOT
    CREATE DATABASE (@= ccdb.name @);
    CREATE ROLE ${CCDB_USERNAME} LOGIN PASSWORD '${CCDB_PASSWORD}';
    CREATE DATABASE (@= uaadb.name @);
    CREATE ROLE ${UAADB_USERNAME} LOGIN PASSWORD '${UAADB_PASSWORD}';
    EOT
    psql -U postgres -f /tmp/setup_db.sql
    psql -U postgres -d (@= ccdb.name @) -c "CREATE EXTENSION citext"
    psql -U postgres -d (@= uaadb.name @) -c "CREATE EXTENSION citext"

--- #@ template.replace(overlay.apply(library.get("postgres").eval(), add_cf_db_namespace()))
